MODULE BillServiceCost;

REQUIRE MasterData, Bill, BarCode, Utils, ItemCost;

NAMESPACE Invoicing;

// cost allocation base
CLASS CostAllocationBase 'База распределения';
TABLE CostAllocationBase (CostAllocationBase);

name 'Наименование' (CostAllocationBase o) = staticCaption(o) IF o IS CostAllocationBase CHARWIDTH 15;

FORM dialogCostAllocationBases 'База распределения'
    OBJECTS o = CostAllocationBase
    PROPERTIES(o) READONLY name
    
    LIST CostAllocationBase OBJECT o
;

EXTEND CLASS CostAllocationBase {
    ammount 'Стоимость приобретения',
    cost 'Плановая себестоимость',
    salesPrice 'Сумма по ценам продажи',
    weight 'Масса',
    volume 'Объем',
    volumetric 'Габаритный вес'
}

// item form
costAllocationBase 'База распределения' = DATA CostAllocationBase (Service);
nameCostAllocationBase 'База распределения' (Service s) = name(costAllocationBase(s));

EXTEND FORM item PROPERTIES nameCostAllocationBase(i); 

DESIGN item {
    column2 {
        MOVE PROPERTY(nameCostAllocationBase(i));
    }
}

// cost allocation line
costAllocationBase 'База распределения' = DATA CostAllocationBase (BillLine);
nameCostAllocationBase 'База распределения' (BillLine bsl) = name(costAllocationBase(bsl));

WHEN LOCAL CHANGED(item(BillLine bsl)) DO costAllocationBase(bsl) <- costAllocationBase(item(bsl) AS Service);

// base
allocationBase (bl, bsl) = ABSTRACT CASE NUMERIC[14,3] (BillLine, CostAllocationBase);

allocationBase (BillLine bl, CostAllocationBase b) += 
    WHEN item(bl) IS Product AND b = CostAllocationBase.ammount THEN NUMERIC[14,3](untaxedAmount(bl));  
allocationBase (BillLine bl, CostAllocationBase b) += 
    WHEN item(bl) IS Product AND b = CostAllocationBase.cost THEN NUMERIC[14,3](cost(item(bl), DATE(dateTime(bl))) * quantity(bl)); 
allocationBase (BillLine bl, CostAllocationBase b) += 
    WHEN item(bl) IS Product AND b = CostAllocationBase.salesPrice THEN NUMERIC[14,3](salesPrice(item(bl)) * quantity(bl));
allocationBase (BillLine bl, CostAllocationBase b) += 
    WHEN item(bl) IS Product AND b = CostAllocationBase.weight THEN NUMERIC[14,3](weight(item(bl)) * quantity(bl));
allocationBase (BillLine bl, CostAllocationBase b) += 
    WHEN item(bl) IS Product AND b = CostAllocationBase.volume THEN NUMERIC[14,3](volume(item(bl)) * quantity(bl));
allocationBase (BillLine bl, CostAllocationBase b) += 
    WHEN item(bl) IS Product AND b = CostAllocationBase.volumetric THEN NUMERIC[14,3](max(volume(item(bl)) * 200, weight(item(bl))) * quantity(bl));

allocationBase 'База распределения' (BillLine bl, BillLine bsl) = allocationBase(bl, costAllocationBase(bsl));

serviceLine 'Распределять' = DATA BOOLEAN (BillLine, BillLine);
costAllocated 'Распределено' = DATA NUMERIC[14,2] (BillLine, BillLine);

costAllocated 'Распределено' (BillLine bsl) = GROUP SUM costAllocated(BillLine bl, bsl) IF serviceLine(bl, bsl);

CONSTRAINT costAllocated(BillLine bsl) AND NOT costAllocated(bsl) <= untaxedAmount(bsl)
    MESSAGE 'Распределенная сумма не может превышать стоимость услуги';  

calcCostAllocated 'Распределено' (BillLine bl, BillLine bsl) = PARTITION UNGROUP untaxedAmount
    PROPORTION STRICT ROUND(2) allocationBase(bl, bsl) IF serviceLine(bl, bsl)
    ORDER bl BY bsl;

allocate 'Распределить' (BillLine bsl) {
    costAllocated (BillLine bl, bsl) <- calcCostAllocated(bl, bsl);
}

service 'Распределять' (Bill b, BillLine bsl) = GROUP MAX serviceLine(BillLine bl, bsl) IF bill(bl) = b;
checkBill (Bill b, BillLine bsl) {
    LOCAL checked = BOOLEAN ();
    checked() <- NOT service(b,bsl);
    FOR bill(BillLine bl) == b DO
        serviceLine(bl, bsl) <- checked();
}

EXTEND FORM bill
    OBJECTS bsl = BillLine
    PROPERTIES(bsl) READONLY index, nameItem, nameUom, idBarCodeItem, idItem, untaxedAmount, costAllocated
    PROPERTIES(bsl) nameCostAllocationBase
    FILTERS b = bill(bsl),
            item(bsl) IS Service

    OBJECTS bc = Bill
    PROPERTIES(bc) READONLY nameType, dateTime, nameStatus, number, nameVendor, nameCompany, amount
    PROPERTIES service(bc, bsl) ON CHANGE checkBill(bc, bsl)
    PROPERTIES allocate(bsl) TOOLBAR DRAW bc
    PROPERTIES(bc) EDIT
    
    OBJECTS bl = BillLine
    PROPERTIES(bl) READONLY numberDate SHOWIF (GROUP SUM 1 IF service(Bill bb, bsl)) > 1 
    PROPERTIES(bl) READONLY index, nameItem, nameUom, idBarCodeItem, idItem, quantity, price, taxes, untaxedAmount
    PROPERTIES(bl, bsl) READONLY allocationBase
    PROPERTIES(bl, bsl) costAllocated, serviceLine
    FILTERS service(bill(bl), bsl),
            item(bl) IS Product
;

DESIGN bill {
    OBJECTS {
        details {
            NEW cost {
                showIf = countServiceLine(b);
                caption = 'Распределение на себестоимость';
                MOVE BOX(bsl) {
                    fill = 0.3;
                }
                MOVE BOX(bc);
                MOVE BOX(bl);                
            }
        }
    }
}