MODULE ManufacturingOrderDone;

REQUIRE ManufacturingOrderInProgress;

NAMESPACE Manufacturing;

EXTEND CLASS ManufacturingOrderStatus {
    done 'Завершен'
}

done 'Завершен' = DATA BOOLEAN (ManufacturingOrder);

executionDateTime 'Дата выполнения' = DATA DATETIME (ManufacturingOrder);
WHEN SET(done(ManufacturingOrder o)) AND NOT CHANGED(executionDateTime(o)) DO executionDateTime(o) <- currentDateTime(); 

productsLocation 'Получатель' = DATA Location (ManufacturingOrder);
nameProductsLocation 'Получатель' (ManufacturingOrder m) = name(productsLocation(m));

@defineDocLocationAccess(manufacturingOrder, o, products);

CONSTRAINT done(ManufacturingOrder o) AND NOT productsLocation(o)
    MESSAGE 'Не выбрано место хранения получателя в завершенном производственном заказе'; 

prevOnHandAProductsLocation 'Остаток после операции (куда)' (ManufacturingOrder o) = 
    prevOnHandA(productsLocation(o), item(o), executionDateTime(o));

markAsDone 'Завершить' (ManufacturingOrder m) {
    APPLY;
    IF canceled() THEN RETURN;
        
    NEWSESSION {
        IF NOT produced(m) THEN
            setManufactured(m, toManufacture(m));
        
        ready(m) <- TRUE;
        inProgress(m) <- TRUE;
        done(m) <- TRUE;
        APPLY;
    }
}

status(ManufacturingOrder m) += WHEN done(m) THEN ManufacturingOrderStatus.done;

EXTEND FORM manufacturingOrder
    PROPERTIES(o) markAsDonePrimary = markAsDone SHOWIF status(o) = ManufacturingOrderStatus.inProgress,
                  markAsDoneSecondary = markAsDone SHOWIF (status(o) = ManufacturingOrderStatus.draft OR 
                                                           status(o) = ManufacturingOrderStatus.waiting OR 
                                                           status(o) = ManufacturingOrderStatus.ready), 
                  done, 
                  executionDateTime READONLY SHOWIF done(o),
                  
                  nameProductsLocation
;

DESIGN manufacturingOrder {
    primaryActions {
        MOVE PROPERTY(markAsDonePrimary) { fontStyle = 'bold'; }
    }
    secondaryActions {
        MOVE PROPERTY(markAsDoneSecondary);
    }
    status {
        MOVE PROPERTY(done(o));
    }
    headerLeft {
        MOVE PROPERTY(executionDateTime(o));
    }
    finishedHeader {
        MOVE PROPERTY(nameProductsLocation(o)) { notNull = TRUE; }
    }
}

EXTEND FORM manufacturingOrders
    PROPERTIES(o) READONLYIF isReadonly()
                           executionDateTime AFTER scheduledDateTime(o),
                           nameProductsLocation AFTER manufactured(o)
    PROPERTIES(o) READONLY prevOnHandAProductsLocation READONLY AFTER nameProductsLocation(o)  

    EXTEND FILTERGROUP status
        FILTER 'Завершен' status(o) = ManufacturingOrderStatus.done    
;

extraCopy (ManufacturingOrder o, ManufacturingOrder m) + {
    productsLocation(o) <- productsLocation(m);
}

@defineSelectionAction(manufacturingOrders, ManufacturingOrder, markAsDone, 'Завершить', statuses);
