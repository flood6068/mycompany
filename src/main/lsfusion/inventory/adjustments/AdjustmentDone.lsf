MODULE AdjustmentDone;

REQUIRE AdjustmentInProgress, Utils;

NAMESPACE Inventory;

EXTEND CLASS AdjustmentStatus {
    done 'Завершена'
}
done 'Завершена' = DATA BOOLEAN (Adjustment);

status(Adjustment a) += WHEN done(a) THEN AdjustmentStatus.done;
readonly(Adjustment a) += WHEN done(a) THEN TRUE; 

validate 'Завершить' (Adjustment a) {
    APPLY; // сохраняем изменения
    IF canceled() THEN RETURN;
    
    NEWSESSION {
        done(a) <- TRUE;
        APPLY;
    }    
}

EXTEND FORM adjustment
    PROPERTIES(a) validate SHOWIF status(a) = AdjustmentStatus.inProgress, done 
;

DESIGN adjustment {                               
    primaryActions {                  
        MOVE PROPERTY(validate(a)) { fontStyle = 'bold'; }
    }
    status {
        MOVE PROPERTY(done(a));                              
    }  
}

// inv adjustment
difference (AdjustmentLine l) = realQuantity(l) (-) theoreticalQuantity(l);
createInAdjustment = ABSTRACT VALUE BOOLEAN (AdjustmentLine); 

CLASS InvAdjustment 'Инвентаризация';

invAdjustment = AGGR InvAdjustment WHERE (difference(AdjustmentLine line) OR createInAdjustment(line)) AND done(adjustment(line)) MATERIALIZED INDEXED;

adjustment (InvAdjustment a) = adjustment(line(a)) MATERIALIZED INDEXED;

quantity '{Quantity}' (InvAdjustment a) = difference(line(a));

location (InvAdjustment a) = location(line(a));
nameLocation 'Склад' (InvAdjustment a) = canonicalName(location(a));

product (InvAdjustment a) = product(line(a));
nameProduct 'Товар' (InvAdjustment a) = name(product(a));

edit (InvAdjustment a) + { edit(adjustment(a)); } 

EXTEND FORM adjustment
    OBJECTS i = InvAdjustment
    PROPERTIES(i) READONLY nameProduct, nameLocation, quantity
    FILTERS adjustment(i) = a
;

DESIGN adjustment {
    details {
        NEW adjustments {
            showIf = done(a);
            caption = 'Изменения';
            MOVE BOX(i);
        }
    }
}