MODULE ServiceImport;

REQUIRE ServiceP, BarCode, System;

NAMESPACE MasterData;

serviceExport 'Экспорт услуг' () {
    NEWSESSION {
        IF NOT (GROUP SUM 1 IF Service s IS Service) THEN {
            NEW s = Service {
                id(s) <- '123';
                dataName(s) <- 'Моя услуга';
                category(s) <- GROUP LAST Category c ORDER DESC c WHERE c IS Category;
            }
        }
    
        LOCAL f = EXCELFILE ();
        EXPORT XLSX HEADER FROM 'Код услуги' = id(Service s), 'Наименование' = dataName(s), 'Код категории' = idCategory(s), 
            'Штрихкод' = idBarCode(s), 'Код учетной единицы' = idUom(s) WHERE s IS Service TO f;   
        open(f());
    }
}

serviceImport 'Импорт услуг' () {
    LOCAL id = STRING[50] (INTEGER);
    LOCAL name = ISTRING[50] (INTEGER);
    LOCAL idCategory = ISTRING[50] (INTEGER);
    LOCAL barCode = ISTRING[20] (INTEGER);
    LOCAL idUnitM = ISTRING[50] (INTEGER);
       
    INPUT f = EXCELFILE DO {
        NEWSESSION {
            IMPORT XLS HEADER FROM f TO id = A, name = B, idCategory = C, barCode = D, idUnitM = E; 
            
            FOR [GROUP SUM 1 BY idCategory(INTEGER i)](num) AND NOT category[STRING](num) DO {
                MESSAGE 'Отсутствует категория в базе данных с кодом ' + num + '. Импорт отменен';;
                RETURN;
            }  
            
            FOR imported(INTEGER i) DO NEW s = Service {
                id(s) <- id(i);
                dataName(s) <- name(i);
                category(s) <- category(idCategory(i));
                NEW b = BarCode {
                    item(b) <- s;
                    id(b) <- barCode(i);
                }
                uom(s) <- uom(idUnitM(i));
            }
            APPLY;
            MESSAGE 'Импорт завершен';
        }
    }    
}

EXTEND FORM migrationData 
    PROPERTIES serviceImport(), serviceExport()
;

DESIGN migrationData {
    commons {
        NEW service {
            type = CONTAINERH;
            caption = 'Услуги';
            MOVE PROPERTY(serviceImport());
            MOVE PROPERTY(serviceExport());
        }
    }
}
