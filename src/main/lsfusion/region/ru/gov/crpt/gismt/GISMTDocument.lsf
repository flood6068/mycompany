MODULE GISMTDocument;

REQUIRE Doc,
        GISMTAuthentication, GISMTDocumentType, 
        GISMTSource, CRPTLot, LegalEntityRu;

NAMESPACE GISMT;

CLASS Document 'Документ ГИС МТ';

@defineDocStatus(document, 'документа ГИС МТ');

id 'Код' = DATA STRING[100] (Document);
document 'Документ ГИС МТ' = GROUP AGGR Document d BY id(d);

company = DATA Company (Document);
nameCompany 'Компания' (Document d) = name(company(d));
innCompany 'ИНН' (Document d) = inn(company(d)); 

lotType = DATA LotType (Document) NONULL;
idLotType (Document d) = id(lotType(d));
nameLotType 'Товарная группа' (Document d) = name(lotType(d));

type 'Тип' = DATA DocumentType (Document) NONULL;
idType (Document d) = id(type(d));
nameType 'Тип' (Document d) = name(type(d));

source 'Источник' = DATA Source (Document);
descriptionSource 'Источник' (Document d) = description(source(d));

countDocuments (Source s) = GROUP SUM 1 IF source(Document d) = s;

documentHeaders (TEXT name) = CASE
    WHEN name = 'Authorization' THEN 'Bearer ' + token();

FORM document 'Документ ГИС МТ'
    OBJECTS d = Document PANEL 
    PROPERTIES(d) id, nameLotType, nameType, nameCompany, descriptionSource
    
    EDIT Document OBJECT d
;

DESIGN document {
    caption = (CONCAT ' ', 'Документ ГИС МТ', id(d));
    PROPERTY(nameLotType(d)) { notNull = TRUE; }
    PROPERTY(nameType(d)) { notNull = TRUE; }
}

FORM documents 'Документы ГИС МТ'
    OBJECTS d = Document 
    PROPERTIES(d) READONLY id, nameLotType, nameType, nameCompany, descriptionSource
    PROPERTIES(d) NEWSESSION EDIT, DELETE
    
    LIST Document OBJECT d
;

NAVIGATOR {
    CRPT {
        NEW documents;
    }
}

@defineDocStatusForm(document, d);

META defineDocGISMT(doc, docLine, item, quantity, obj)
    documentType = DATA DocumentType (###doc##Type);
    nameDocumentType 'Тип документа ГИС МТ' (###doc##Type t) = name(documentType(t));
    
    documentType (###doc o) = documentType(type(o));
    
    EXTEND FORM doc##Type
        PROPERTIES(o) nameDocumentType
    ;
    
    EXTEND CLASS ###doc : Source;
    
    count (###doc o, LotType t) = GROUP SUM 1 IF quantity(docLine l, Lot lot) AND lotType(item(l)) = t AND doc(l) = o;
    
    toCreateDocument (###doc o, LotType t) = count(o, t) AND NOT document(o, t);
    toCreateDocument (###doc o) = (GROUP SUM 1 IF toCreateDocument (o, LotType t)) AND documentType(o) AND active(o);
    
    createDocument 'Отправить в ГИС МТ' (###doc o) {
        FOR toCreateDocument(o, LotType t) DO NEWSESSION {
            NEW d = Document {
                company(d) <- company(o);
                lotType(d) <- t;
                type(d) <- documentType(o); 
                source(d) <- o;
                
                send(d);
                
                IF id(d) THEN
                    APPLY;
            }
        }
    }
    
    EXTEND FORM doc   
        PROPERTIES(obj) SHOWIF toCreateDocument(obj) createDocument
    
        OBJECTS gd = Document
        PROPERTIES(gd) READONLY id, nameLotType, nameStatus BACKGROUND colorStatus(gd)    
        PROPERTIES(gd) NEWSESSION EDIT GRID   
        FILTERS source(gd) = obj       
    ;
     
    DESIGN doc {
        primaryActions {
            MOVE PROPERTY(createDocument(obj)) { fontStyle = 'bold'; };
        }
        details  {
            NEW gismt {
                showIf = documentType(obj); 
                caption = CONCAT ' ', 'ГИС МТ', '(' + countDocuments(obj) + ')';
                MOVE BOX(gd);
            }
        }
    }
    
    CONSTRAINT CHANGED(quantity(docLine l, Lot lot)) AND (document(doc(l), lotType(item(l))) OR PREV(document(doc(l), lotType(item(l))))) 
        MESSAGE 'Запрещено изменять документ, который был отослан в ГИС МТ';
END

// import properties
GROUP body;

number = DATA LOCAL STRING[100] (INTEGER);
docDate = DATA LOCAL STRING (INTEGER);

GROUP sender;
senderInn = DATA LOCAL STRING (INTEGER) IN sender;

status = DATA LOCAL STRING (INTEGER);
downloadDesc = DATA LOCAL STRING (INTEGER);

gtin = DATA LOCAL STRING (INTEGER);
uit_code = DATA LOCAL STRING[100] (INTEGER);

product = DATA LOCAL Product (INTEGER);