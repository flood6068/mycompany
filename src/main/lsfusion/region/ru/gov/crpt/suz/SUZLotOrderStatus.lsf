MODULE SUZLotOrderStatus;

REQUIRE SUZLotOrderPost;

NAMESPACE SUZ;

EXTEND CLASS LotOrderStatus {
    available 'Доступен'
}
available 'Доступен' = DATA BOOLEAN (LotOrder);

status (LotOrder s) += WHEN available(s) THEN LotOrderStatus.available;
colorStatus (LotOrder s) += WHEN status(s) = LotOrderStatus.available THEN RGB(224,224,255);

// check
bufferStatus 'Статус' = DATA STRING (LotOrderLine);
rejectionReason 'Причина отмены' = DATA STRING (LotOrderLine); 

availableCodes 'Доступно' = DATA INTEGER (LotOrderLine);

checkStatus 'Проверить статус' (LotOrder o) {
    APPLY; 
    IF canceled() THEN RETURN;

    NEWSESSION {
        LOCAL statusMessage = STRING();
        statusMessage() <- '';
        FOR quantity(o, STRING[14] gtin) DO {
            suzToken() <- token(company(o));
            LOCAL result = FILE();
            TRY {
                EXTERNAL HTTP GET lotOrderUrl(o) + '/buffer/status?omsId=' + omsId(company(o)) + '&orderId=' + id(o) + '&gtin=' + gtin HEADERS suzHeaders TO result;
            } CATCH {
                fileToString(result());
                MESSAGE 'Ошибка при оправке документа в СУЗ : \n' + (OVERRIDE messageCaughtException(), '') + '\n' + (OVERRIDE resultString(), '');
                RETURN;
            }
            
            LOCAL bufferStatus = STRING ();
            LOCAL rejectionReason = STRING ();
            LOCAL availableCodes = INTEGER ();
            IMPORT JSON FROM result() TO() bufferStatus, rejectionReason, availableCodes;
            
            bufferStatus(LotOrderLine l) <- bufferStatus() WHERE lotOrder(l) = o AND gtinProduct(l) = gtin;
            rejectionReason(LotOrderLine l) <- rejectionReason() WHERE lotOrder(l) = o AND gtinProduct(l) = gtin;
            
            IF bufferStatus() = 'ACTIVE' THEN {
                LOCAL lotOrder = LotOrder ();
                LOCAL gtin = STRING[14] ();
                lotOrder() <- o;
                gtin() <- gtin;
                availableCodes(LotOrderLine l) <- (PARTITION UNGROUP availableCodes
                                                              LIMIT quantity(l) IF lotOrder(l) = lotOrder() AND gtinProduct(l) = gtin()
                                                              ORDER l) WHERE lotOrder(l) = o AND gtinProduct(l) = gtin;
            }
            statusMessage() <- statusMessage() + (CONCAT ' ', 'Товар', gtin, ', статус :', bufferStatus(), '\n');
        }
        MESSAGE statusMessage();
        
        IF GROUP SUM 1 IF availableCodes(LotOrderLine l) = quantity(l) AND lotOrder(l) = o THEN
              available(o) <- TRUE;
        
        APPLY;
    }
}

EXTEND FORM lotOrder
    PROPERTIES(o) checkStatus SHOWIF status(o) = LotOrderStatus.posted, available
    
    PROPERTIES(l) READONLY bufferStatus, rejectionReason, availableCodes 
;

DESIGN lotOrder {
    primaryActions {
        MOVE PROPERTY(checkStatus(o)) { fontStyle = 'bold'; }
    }                
    status {
        MOVE PROPERTY(available(o));                               
    }
}

EXTEND FORM lotOrders    
    EXTEND FILTERGROUP status
        FILTER 'Доступен' status(o) = LotOrderStatus.available    
;
